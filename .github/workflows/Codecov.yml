name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Clang
        run: sudo apt-get install -y clang llvm lcov

      - name: Set up CMake with Clang for Coverage
        run: |
          mkdir build-coverage
          cd build-coverage
          cmake -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_TYPE=Coverage ..
          make

      - name: Run Tests
        run: |
            cd build-coverage
            LLVM_PROFILE_FILE="default.profraw" ./DungeonGameTest  # Runs the tests

      - name: Run Tests with AddressSanitizer
        run: |
          cd build-coverage
          LLVM_PROFILE_FILE="default.profraw" ./DungeonGameTest  # Runs the tests with AddressSanitizer enabled

      - name: Generate Coverage Report
        run: |
            cd build-coverage
            llvm-profdata merge -sparse default.profraw -o default.profdata
            llvm-cov show ./DungeonGameTest -instr-profile=default.profdata > coverage.txt
            llvm-cov report ./DungeonGameTest -instr-profile=default.profdata
    

      - name: Upload Coverage to Codecov
        run: |
          bash <(curl -s https://codecov.io/bash) -f build-coverage/coverage.txt
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
